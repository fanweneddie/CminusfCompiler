
int negInt(void){
    int b[10];
    b[1 - 2] = 0;
    return b[1];
}

float negFp(void){
    int b[10];
    b[1 - 3] = 0;
    return b[2];
}


void main(void){
    int a;
    int b[10];
    float c;
    a = 0;
    /* 恒成立测试 */
    if(1 == 1){
        output(1);
    }
    /* 恒不成立测试 */
    if(1 == 0){
        output(2);
    }
    if(1){

    }
    if(1.0){

    }
    if(0){

    }
    if(0.0){

    }
    /* If-Else 测试 */
    if(a){
        output(2);
    }else{
        output(3);
    }
    if(1){

    }else{

    }
    if(c){

    }else{

    }
    if(0){

    }else{

    }
    while(c){

    }

    while(1){
        output(1);
    }
    while(0){
        output(2);
    }
    while(1.0){
        output(3);
    }
    while(0.0){
        output(4);
    }
    while(a){

    }
    while(a + 1.0){

    }
    /* 数组下标转型 */
    b[1.0] = 1;
    b[1 == 1] = 2;
    b[a + 1.0] = 3;
    b[a + 1] = 4;

    a = 1 == 1;
    a = 1 <= 1;
    a = 1 >= 1;
    a = 1 < 1;
    a = 1 > 1;
    a = 1 != 1;
    a = 1 == 1.0;
    a = 1.0 == 1;
    a = a == a;
    a = a >= a;
    a = a <= a;
    a = a > a;
    a = a < a;
    a = a != a;
    a = a == (a == 1);
    a = (a == 1) == a;
    a = 1 + 1;
    a = 1 + (1 == 1);
    a = (1 == 1) + 1;
    a = 1 + 1.0;
    a = (a == 1) + 1.0;
    a = (1 == a) + 1;
    a = 1 + (1 == a);
    a= a + 1.0;
    a = 1.0 + a;
    a = (a == 1) - 1.0;
    a = (1 == a) - 1;
    a = 1 - (1 == a);
    a = a - 1.0;
    a = 1.0 - a;
    a = 1 * (a == 1);
    a = (a == 1) * 1;
    a = a * 1.0;
    a = 1.0 * a;
    a = a / 1;
    a = 1 / a;
    a = 1.0 / a;
    a = a / 1.0;
    a = c == (a == 1);
    a = (a == 1) == c;
    a = c == 1;
    a = c >= 1;
    a = c <= 1;
    a = c > 1;
    a = c < 1;
    a = c != 1;
    a = 1 < c;
    a = 1 + 1;
    a = 1 - 1;
    a = 1 * 1;
    a = 1 + 1.0;
    a = 1.0 - 1;
    return;

}